install.packages(c("pvclust", "qgraph"))
library(dplyr)
library(tidyr)
library(plotly)
library(reshape)
commonprocessing <- function(dat) {
colnames(dat) <- c("File1", "File2", "Result")
dat$File1 <- as.numeric(dat$File1)
dat$File2 <- as.numeric(dat$File2)
dat$Result <- as.numeric(dat$Result)
dat <- dat %>% filter(File1 < 40, File2 < 40)
dat
}
data1 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_original.csv"))
data2 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_top_700_one_over_tenth.csv"))
data3 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_random_700_one_over_tenth.csv"))
data4 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/short_text_original.csv"))
library(dplyr)
library(tidyr)
library(plotly)
library(reshape)
commonprocessing <- function(dat) {
colnames(dat) <- c("File1", "File2", "Result")
dat$File1 <- as.numeric(dat$File1)
dat$File2 <- as.numeric(dat$File2)
dat$Result <- as.numeric(dat$Result)
dat <- dat %>% filter(File1 < 40, File2 < 40)
dat
}
data1 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_original.csv"))
data2 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_top_700_one_over_tenth.csv"))
data3 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_random_700_one_over_tenth.csv"))
data4 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/short_text_original.csv"))
#separate(Column1, c("File1", "File2", "Result"), " ")
plot_ly(data1, x=~File2, y=~Result, type = 'scatter',
mode = 'lines') %>% layout(
xaxis = list(title = "", showgrid = FALSE),
yaxis = list(title = "", range=c(0, 1), nticks = 11, showgrid = TRUE, showline = TRUE, zeroline = TRUE, showticklabels = TRUE, ticksuffix="&nbsp;&nbsp;"))
library(dplyr)
library(tidyr)
library(plotly)
library(reshape)
commonprocessing <- function(dat) {
colnames(dat) <- c("File1", "File2", "Result")
dat$File1 <- as.numeric(dat$File1)
dat$File2 <- as.numeric(dat$File2)
dat$Result <- as.numeric(dat$Result)
dat <- dat %>% filter(File1 < 40, File2 < 40)
dat <- dat %>% mutate(index = paste0(File1, "vs", File2))
dat
}
data1 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_original.csv"))
data2 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_top_700_one_over_tenth.csv"))
data3 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_random_700_one_over_tenth.csv"))
data4 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/short_text_original.csv"))
#separate(Column1, c("File1", "File2", "Result"), " ")
plot_ly(data1, x=~index, y=~Result, type = 'scatter',
mode = 'lines') %>% layout(
xaxis = list(title = "", showgrid = FALSE),
yaxis = list(title = "", range=c(0, 1), nticks = 11, showgrid = TRUE, showline = TRUE, zeroline = TRUE, showticklabels = TRUE, ticksuffix="&nbsp;&nbsp;"))
library(dplyr)
library(tidyr)
library(plotly)
library(reshape)
commonprocessing <- function(dat) {
colnames(dat) <- c("File1", "File2", "Result")
dat$File1 <- as.numeric(dat$File1)
dat$File2 <- as.numeric(dat$File2)
dat$Result <- as.numeric(dat$Result)
dat <- dat %>% filter(File1 < 40, File2 < 40)
dat <- dat %>% mutate(index = paste0(File1, "-", File2))
dat
}
data1 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_original.csv"))
data2 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_top_700_one_over_tenth.csv"))
data3 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_random_700_one_over_tenth.csv"))
data4 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/short_text_original.csv"))
#separate(Column1, c("File1", "File2", "Result"), " ")
plot_ly(data1, x=~index, y=~Result, type = 'scatter',
mode = 'lines') %>% layout(
xaxis = list(title = "", showgrid = FALSE),
yaxis = list(title = "", range=c(0, 1), nticks = 11, showgrid = TRUE, showline = TRUE, zeroline = TRUE, showticklabels = TRUE, ticksuffix="&nbsp;&nbsp;"))
library(dplyr)
library(tidyr)
library(plotly)
library(reshape)
commonprocessing <- function(dat) {
colnames(dat) <- c("File1", "File2", "Result")
dat$File1 <- as.numeric(dat$File1)
dat$File2 <- as.numeric(dat$File2)
dat$Result <- as.numeric(dat$Result)
dat <- dat %>% filter(File1 < 40, File2 < 40)
dat <- dat %>% mutate(index = paste0(File1, "-", File2))
dat
}
data1 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_original.csv"))
data2 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_top_700_one_over_tenth.csv"))
data3 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_random_700_one_over_tenth.csv"))
data4 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/short_text_original.csv"))
#separate(Column1, c("File1", "File2", "Result"), " ")
plot_ly(data1, x=~index, y=~Result, type = 'scatter',
mode = 'lines') %>% layout(
xaxis = list(title = "", showgrid = FALSE),
yaxis = list(title = "", range=c(0, 1), nticks = 11, showgrid = TRUE, showline = TRUE, zeroline = TRUE, showticklabels = TRUE, ticksuffix="&nbsp;&nbsp;"))
library(dplyr)
library(tidyr)
library(plotly)
library(reshape)
commonprocessing <- function(dat) {
colnames(dat) <- c("File1", "File2", "Result")
dat$File1 <- as.numeric(dat$File1)
dat$File2 <- as.numeric(dat$File2)
dat$Result <- as.numeric(dat$Result)
dat <- dat %>% filter(File1 < 40, File2 < 40)
dat <- dat %>% mutate(index = paste0(File1, "-", File2))
dat
}
data1 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_original.csv"))
data2 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_top_700_one_over_tenth.csv"))
data3 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_random_700_one_over_tenth.csv"))
data4 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/short_text_original.csv"))
#separate(Column1, c("File1", "File2", "Result"), " ")
plot_ly(data1, x=~index, y=~Result, type = 'scatter',
mode = 'lines') %>% layout(
xaxis = list(title = "", showgrid = FALSE),
yaxis = list(title = "", range=c(0, 1), nticks = 11, showgrid = TRUE, showline = TRUE, zeroline = TRUE, showticklabels = TRUE, ticksuffix="&nbsp;&nbsp;"))
library(dplyr)
library(tidyr)
library(plotly)
library(reshape)
commonprocessing <- function(dat) {
colnames(dat) <- c("File1", "File2", "Result")
dat$File1 <- as.numeric(dat$File1)
dat$File2 <- as.numeric(dat$File2)
dat$Result <- as.numeric(dat$Result)
dat <- dat %>% filter(File1 < 40, File2 < 40)
dat <- dat %>% mutate(index = paste0(File1, "vs", File2))
dat
}
data1 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_original.csv"))
data2 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_top_700_one_over_tenth.csv"))
data3 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_random_700_one_over_tenth.csv"))
data4 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/short_text_original.csv"))
#separate(Column1, c("File1", "File2", "Result"), " ")
plot_ly(data1, x=~index, y=~Result, type = 'scatter',
mode = 'lines') %>% layout(
xaxis = list(title = "", showgrid = FALSE),
yaxis = list(title = "", range=c(0, 1), nticks = 11, showgrid = TRUE, showline = TRUE, zeroline = TRUE, showticklabels = TRUE, ticksuffix="&nbsp;&nbsp;"))
library(dplyr)
library(tidyr)
library(plotly)
library(reshape)
commonprocessing <- function(dat) {
colnames(dat) <- c("File1", "File2", "Result")
dat$File1 <- as.numeric(dat$File1)
dat$File2 <- as.numeric(dat$File2)
dat$Result <- as.numeric(dat$Result)
dat <- dat %>% filter(File1 < 40, File2 < 40)
dat <- dat %>% mutate(index = paste0(File1, "vs", File2))
library(dplyr)
library(tidyr)
library(plotly)
library(reshape)
commonprocessing <- function(dat) {
colnames(dat) <- c("File1", "File2", "Result")
dat$File1 <- as.numeric(dat$File1)
dat$File2 <- as.numeric(dat$File2)
dat$Result <- as.numeric(dat$Result)
dat <- dat %>% filter(File1 < 40, File2 < 40)
dat <- dat %>% mutate(index = paste0(File1, "vs", File2))
dat
}
data1 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_original.csv"))
data2 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_top_700_one_over_tenth.csv"))
data3 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_random_700_one_over_tenth.csv"))
data4 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/short_text_original.csv"))
#separate(Column1, c("File1", "File2", "Result"), " ")
plot_ly(data1, x=~index, y=~Result, type = 'scatter',
mode = 'lines') %>% layout(
xaxis = list(title = "", showgrid = FALSE),
yaxis = list(title = "", range=c(0, 1), nticks = 11, showgrid = TRUE, showline = TRUE, zeroline = TRUE, showticklabels = TRUE, ticksuffix="&nbsp;&nbsp;"))
rownames(index)
data1$index
plot_ly(data1, x=~index, y=~Result, type = 'scatter',
mode = 'lines') %>% layout(
xaxis = list(title = "", showgrid = FALSE, categoryarray = data1$index, categoryorder = "array"),
yaxis = list(title = "", range=c(0, 1), nticks = 11, showgrid = TRUE, showline = TRUE, zeroline = TRUE, showticklabels = TRUE, ticksuffix="&nbsp;&nbsp;"))
library(dplyr)
library(tidyr)
library(plotly)
library(reshape)
commonprocessing <- function(dat) {
colnames(dat) <- c("File1", "File2", "Result")
dat$File1 <- as.numeric(dat$File1)
dat$File2 <- as.numeric(dat$File2)
dat$Result <- as.numeric(dat$Result)
dat <- dat %>% filter(File1 < 40, File2 < 40)
dat <- dat %>% mutate(index = paste0(File1, "vs", File2))
dat
}
data1 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_original.csv"))
data2 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_top_700_one_over_tenth.csv"))
data3 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_random_700_one_over_tenth.csv"))
data4 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/short_text_original.csv"))
#separate(Column1, c("File1", "File2", "Result"), " ")
plot_ly(data1, x=~index, y=~Result, type = 'scatter',
mode = 'lines') %>% layout(
xaxis = list(title = "", showgrid = FALSE, categoryarray = data1$index, categoryorder = "array"),
yaxis = list(title = "", range=c(0, 1), nticks = 11, showgrid = TRUE, showline = TRUE, zeroline = TRUE, showticklabels = TRUE, ticksuffix="&nbsp;&nbsp;"))
plot_ly(data1, x=~index, y=~Result, type = 'scatter',
mode = 'lines') %>%
add_trace(data2, x=~index, y=~Result) %>%
add_trace(data3, x=~index, y=~Result) %>%
add_trace(data4, x=~index, y=~Result) %>%
layout(
xaxis = list(title = "", showgrid = FALSE, categoryarray = data1$index, categoryorder = "array"),
yaxis = list(title = "", range=c(0, 1), nticks = 11, showgrid = TRUE, showline = TRUE, zeroline = TRUE, showticklabels = TRUE, ticksuffix="&nbsp;&nbsp;"))
library(dplyr)
library(tidyr)
library(plotly)
library(reshape)
commonprocessing <- function(dat) {
colnames(dat) <- c("File1", "File2", "Result")
dat$File1 <- as.numeric(dat$File1)
dat$File2 <- as.numeric(dat$File2)
dat$Result <- as.numeric(dat$Result)
dat <- dat %>% filter(File1 < 40, File2 < 40)
dat <- dat %>% mutate(index = paste0(File1, "vs", File2))
dat
}
data1 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_original.csv"))
data2 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_top_700_one_over_tenth.csv"))
data3 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_random_700_one_over_tenth.csv"))
data4 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/short_text_original.csv"))
#separate(Column1, c("File1", "File2", "Result"), " ")
plot_ly(data1, x=~index, y=~Result, type = 'scatter',
mode = 'lines') %>%
add_trace(data2, x=~index, y=~Result) %>%
add_trace(data3, x=~index, y=~Result) %>%
add_trace(data4, x=~index, y=~Result) %>%
layout(
xaxis = list(title = "", showgrid = FALSE, categoryarray = data1$index, categoryorder = "array"),
yaxis = list(title = "", range=c(0, 1), nticks = 11, showgrid = TRUE, showline = TRUE, zeroline = TRUE, showticklabels = TRUE, ticksuffix="&nbsp;&nbsp;"))
library(dplyr)
library(tidyr)
library(plotly)
library(reshape)
commonprocessing <- function(dat) {
colnames(dat) <- c("File1", "File2", "Result")
dat$File1 <- as.numeric(dat$File1)
dat$File2 <- as.numeric(dat$File2)
dat$Result <- as.numeric(dat$Result)
dat <- dat %>% filter(File1 < 40, File2 < 40)
dat <- dat %>% mutate(index = paste0(File1, "vs", File2))
dat
}
data1 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_original.csv"))
data2 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_top_700_one_over_tenth.csv"))
data3 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_random_700_one_over_tenth.csv"))
data4 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/short_text_original.csv"))
#separate(Column1, c("File1", "File2", "Result"), " ")
plot_ly(data1, x=~index, y=~Result, type = 'scatter',
mode = 'lines') %>%
add_trace(data2, x=~index, y=~Result) %>%
add_trace(data3, x=~index, y=~Result) %>%
add_trace(data4, x=~index, y=~Result) %>%
layout(
xaxis = list(title = "", showgrid = FALSE, categoryarray = data1$index, categoryorder = "array"),
yaxis = list(title = "", range=c(0, 1), nticks = 11, showgrid = TRUE, showline = TRUE, zeroline = TRUE, showticklabels = TRUE, ticksuffix="&nbsp;&nbsp;"))
plot <-
plot_ly(data1, x=~index, y=~Result, type = 'scatter',
mode = 'lines') %>%
add_trace(data2, x=~index, y=~Result) %>%
add_trace(data3, x=~index, y=~Result) %>%
add_trace(data4, x=~index, y=~Result) %>%
layout(
xaxis = list(title = "", showgrid = FALSE, categoryarray = data1$index, categoryorder = "array"),
yaxis = list(title = "", range=c(0, 1), nticks = 11, showgrid = TRUE, showline = TRUE, zeroline = TRUE, showticklabels = TRUE, ticksuffix="&nbsp;&nbsp;"))
plot
library(dplyr)
library(tidyr)
library(plotly)
library(reshape)
commonprocessing <- function(dat) {
colnames(dat) <- c("File1", "File2", "Result")
dat$File1 <- as.numeric(dat$File1)
dat$File2 <- as.numeric(dat$File2)
dat$Result <- as.numeric(dat$Result)
dat <- dat %>% filter(File1 < 40, File2 < 40)
dat <- dat %>% mutate(index = paste0(File1, "vs", File2))
dat <- dat %>% select("index", "Result")
dat
}
data1 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_original.csv"))
colnames(data1)[colnames(data1)=="Result"] <- "Result1"
data2 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_top_700_one_over_tenth.csv"))
colnames(data2)[colnames(data2)=="Result"] <- "Result2"
data3 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_random_700_one_over_tenth.csv"))
colnames(data3)[colnames(data3)=="Result"] <- "Result3"
data4 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/short_text_original.csv"))
colnames(data4)[colnames(data4)=="Result"] <- "Result4"
data <- data1 %>% left_join(data2, by="index") %>% left_join(data3, by="index") %>% left_join(data4, by="index")
#separate(Column1, c("File1", "File2", "Result"), " ")
plot <-
plot_ly(data, x=~index, y=~Result1, type = 'scatter',
mode = 'lines', name="long text all words") %>%
add_trace(y=~Result2, name="long text top 1/10 words") %>%
add_trace(y=~Result3, name="long text random 1/10 words") %>%
add_trace(y=~Result4, name="short text all words") %>%
layout(legend = list(orientation = "h",   # show entries horizontally
xanchor = "center",  # use center of legend as anchor
x = 0.5, y = -120),
xaxis = list(title = "", showgrid = FALSE, categoryarray = data1$index, categoryorder = "array"),
yaxis = list(title = "", range=c(0, 1), nticks = 11, showgrid = TRUE, showline = TRUE, zeroline = TRUE, showticklabels = TRUE, ticksuffix="&nbsp;&nbsp;"))
plot
plot <-
plot_ly(data, x=~index, y=~Result1, type = 'scatter',
mode = 'lines', name="long text all words") %>%
add_trace(y=~Result2, name="long text top 1/10 words") %>%
add_trace(y=~Result3, name="long text random 1/10 words") %>%
add_trace(y=~Result4, name="short text all words") %>%
layout(legend = list(orientation = "h",   # show entries horizontally
xanchor = "center",  # use center of legend as anchor
x = 0.5, y = 0.5),
xaxis = list(title = "", showgrid = FALSE, categoryarray = data1$index, categoryorder = "array"),
yaxis = list(title = "", range=c(0, 1), nticks = 11, showgrid = TRUE, showline = TRUE, zeroline = TRUE, showticklabels = TRUE, ticksuffix="&nbsp;&nbsp;"))
plot
library(dplyr)
library(tidyr)
library(plotly)
library(reshape)
commonprocessing <- function(dat) {
colnames(dat) <- c("File1", "File2", "Result")
dat$File1 <- as.numeric(dat$File1)
dat$File2 <- as.numeric(dat$File2)
dat$Result <- as.numeric(dat$Result)
dat <- dat %>% filter(File1 < 40, File2 < 40)
dat <- dat %>% mutate(index = paste0(File1, "vs", File2))
dat <- dat %>% select("index", "Result")
dat
}
data1 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_original.csv"))
colnames(data1)[colnames(data1)=="Result"] <- "Result1"
data2 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_top_700_one_over_tenth.csv"))
colnames(data2)[colnames(data2)=="Result"] <- "Result2"
data3 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_random_700_one_over_tenth.csv"))
colnames(data3)[colnames(data3)=="Result"] <- "Result3"
data4 <- commonprocessing(read.csv("C:/Development_local/tfidf/data/short_text_original.csv"))
colnames(data4)[colnames(data4)=="Result"] <- "Result4"
data <- data1 %>% left_join(data2, by="index") %>% left_join(data3, by="index") %>% left_join(data4, by="index")
#separate(Column1, c("File1", "File2", "Result"), " ")
plot <-
plot_ly(data, x=~index, y=~Result1, type = 'scatter',
mode = 'lines', name="long text all words") %>%
add_trace(y=~Result2, name="long text top 1/10 words") %>%
add_trace(y=~Result3, name="long text random 1/10 words") %>%
add_trace(y=~Result4, name="short text all words") %>%
layout(legend = list(orientation = "h",   # show entries horizontally
xanchor = "center",  # use center of legend as anchor
x = 0.5, y = 0.5),
xaxis = list(title = "", showgrid = FALSE, categoryarray = data1$index, categoryorder = "array"),
yaxis = list(title = "", range=c(0, 1), nticks = 11, showgrid = TRUE, showline = TRUE, zeroline = TRUE, showticklabels = TRUE, ticksuffix="&nbsp;&nbsp;"))
plot
plot <-
plot_ly(data, x=~index, y=~Result1, type = 'scatter',
mode = 'lines', name="long text all words") %>%
add_trace(y=~Result2, name="long text top 1/10 words") %>%
add_trace(y=~Result3, name="long text random 1/10 words") %>%
add_trace(y=~Result4, name="short text all words") %>%
layout(legend = list(orientation = "h",   # show entries horizontally
xanchor = "center",  # use center of legend as anchor
x = 0.5, y = 0),
xaxis = list(title = "", showgrid = FALSE, categoryarray = data1$index, categoryorder = "array"),
yaxis = list(title = "", range=c(0, 1), nticks = 11, showgrid = TRUE, showline = TRUE, zeroline = TRUE, showticklabels = TRUE, ticksuffix="&nbsp;&nbsp;"))
plot
plot <-
plot_ly(data, x=~index, y=~Result1, type = 'scatter',
mode = 'lines', name="long text all words") %>%
add_trace(y=~Result2, name="long text top 1/10 words") %>%
add_trace(y=~Result3, name="long text random 1/10 words") %>%
add_trace(y=~Result4, name="short text all words") %>%
layout(legend = list(orientation = "h",   # show entries horizontally
xanchor = "center",  # use center of legend as anchor
x = 0.5, y = 1.1),
xaxis = list(title = "", showgrid = FALSE, categoryarray = data1$index, categoryorder = "array"),
yaxis = list(title = "", range=c(0, 1), nticks = 11, showgrid = TRUE, showline = TRUE, zeroline = TRUE, showticklabels = TRUE, ticksuffix="&nbsp;&nbsp;"))
plot
library(dplyr)
library(tidyr)
library(plotly)
library(reshape)
commonprocessing <- function(dat) {
colnames(dat) <- c("File1", "File2", "Result")
dat$File1 <- as.numeric(dat$File1)
dat$File2 <- as.numeric(dat$File2)
dat$Result <- as.numeric(dat$Result)
dat <- dat %>% filter(File1 < 40, File2 < 40)
dat
}
data <- commonprocessing(read.csv("C:/Development_local/tfidf/data/long_text_original.csv"))
#separate(Column1, c("File1", "File2", "Result"), " ")
data <- data %>% rbind(data.frame(File1=c(1:39), File2=c(1:39),Result=0))
data <- data[order(data[,1],data[,2],decreasing=FALSE),]
data <- cast(data, File1 ~ File2)
data[is.na(data)] <- 0
data <- data %>% select(-"File1")
result <- data + t(data)
result[result == 0] <- 1
result <- as.matrix(result)
dimnames(result) <- list(c(1:39),
c(1:39))
plot_ly(x = colnames(result), y = rownames(result), z = result, type = "heatmap", colorscale = "Greys", reversescale =T)
